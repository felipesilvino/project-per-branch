apply plugin: 'maven'
apply plugin: 'maven-publish'

import java.text.SimpleDateFormat
Date buildTimeAndDate = new Date()
ext {
    buildDate = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
}

jar {
    manifest {
        attributes(
                'Built-By': System.properties['user.name'],
                'Created-By': System.properties['java.version'] + ' (' + System.properties['java.vendor'] + ' ' + System.properties["java.vm.version"] + ')',
                'Build-Date': project.buildDate,
                'Build-Time': project.buildTime,
                'Specification-Title': project.name,
                'Specification-Version': project.version,
                'Specification-Vendor': 'Philips Clinical Informatics',
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor': 'Philips Clinical Informatics'
        )
    }
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }
        }
    }
}

if (hasProperty("nexus.user") && hasProperty("nexus.pass") && project.version) {
    publishing {
        repositories {
            maven {
                credentials {
                    username property("nexus.user")
                    password property("nexus.pass")
                }
                if (project.version.toString().endsWith('-SNAPSHOT')) {
                    url project.repositories.findByName('nexus-snapshots').url
                } else {
                    url project.repositories.findByName('nexus-releases').url
                }
            }
        }
    }
}

if(!hasProperty("nexus.publish.local") || property("nexus.publish.local") == 'true'){
    tasks.assemble.dependsOn publishToMavenLocal
}
